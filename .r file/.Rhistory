library(data.table)
library(dplyr)
library(ggnewscale)
library(ggplot2)
library(gridExtra)
library(patchwork)
library(pals)
library(RColorBrewer)
library(svglite)
library(readxl)
library(reshape)
library(tidyr)
library(tidyverse)
library(viridis)
library(viridisLite)
library(rvest)
library(rmarkdown)
library(flexdashboard)
library(haven)
library(magrittr)
library(reshape2)
library(stargazer)
library(labelled)
library(Hmisc)
library(stargazer)
library(sandwich)
library(lmtest)
theme_set(theme_bw())
theme_update(text = element_text(size=12.5))
proj.path <- getwd()
# paths
proj.path <- getwd()
packages <- file.path(proj.path, 'scripts', '00 library', 'packages.R')
# make sure you have the latest.de file located in the next script
ERDF_clean_code <- file.path(proj.path, 'scripts', '01_ERDF_clean_code', 'ERDF_clean_code.R')
# misc code
unclean_initial_and_qualitative_data_encoding <- file.path(proj.path, 'scripts', '00_misc_code', 'unclean_initial_and_qualitative_data_encoding_code.R')
NUTS_names <- file.path(proj.path, 'scripts', '00_misc_code', 'NUTS_names_code.R')
GDP_per_capita_at_NUTS1and2_code <- file.path(proj.path, 'scripts', '00_misc_code', 'GDP_per_capita_at_NUTS1and2_code.R')
urban_rural_districts_code <- file.path(proj.path, 'scripts', '00_misc_code', 'urban_rural_districts_code.R')
intervention_theme_policy_encoding_code <- file.path(proj.path, 'scripts', '00_misc_code', 'intervention_theme_policy_encoding_code.R')
# make sure you have the latest.de file located in the next script
interreg_expenditure_shares_code <- file.path(proj.path, 'scripts', '00_misc_code', 'interreg_expenditure_shares_code.R')
expenditure_histogram_plot <- file.path(proj.path, 'scripts', '03_expenditure_histogram_plot', 'funding_histogram_code_and_plot.R')
# running code
source(packages)
source(packages)
packages <- file.path(proj.path, 'scripts', '00 library', 'packages')
source(packages)
packages <- file.path(proj.path, 'scripts', '00 library', 'packages.R')
source(packages)
# paths
proj.path <- getwd()
packages <- file.path(proj.path, 'scripts', '00_library', 'packages.R')
# make sure you have the latest.de file located in the next script
ERDF_clean_code <- file.path(proj.path, 'scripts', '01_ERDF_clean_code', 'ERDF_clean_code.R')
# misc code
unclean_initial_and_qualitative_data_encoding <- file.path(proj.path, 'scripts', '00_misc_code', 'unclean_initial_and_qualitative_data_encoding_code.R')
NUTS_names <- file.path(proj.path, 'scripts', '00_misc_code', 'NUTS_names_code.R')
GDP_per_capita_at_NUTS1and2_code <- file.path(proj.path, 'scripts', '00_misc_code', 'GDP_per_capita_at_NUTS1and2_code.R')
urban_rural_districts_code <- file.path(proj.path, 'scripts', '00_misc_code', 'urban_rural_districts_code.R')
intervention_theme_policy_encoding_code <- file.path(proj.path, 'scripts', '00_misc_code', 'intervention_theme_policy_encoding_code.R')
# make sure you have the latest.de file located in the next script
interreg_expenditure_shares_code <- file.path(proj.path, 'scripts', '00_misc_code', 'interreg_expenditure_shares_code.R')
expenditure_histogram_plot <- file.path(proj.path, 'scripts', '03_expenditure_histogram_plot', 'funding_histogram_code_and_plot.R')
# running code
source(packages)
source(ERDF_clean_code)
# paths
proj.path <- getwd()
packages <- file.path(proj.path, 'scripts', '00_library', 'packages.R')
# make sure you have the latest.de file located in the next script
ERDF_clean_code <- file.path(proj.path, 'scripts', '01_ERDF_clean_code', 'ERDF_clean_code.R')
# misc code
unclean_initial_and_qualitative_data_encoding <- file.path(proj.path, 'scripts', '00_misc_code', 'unclean_initial_and_qualitative_data_encoding_code.R')
NUTS_names <- file.path(proj.path, 'scripts', '00_misc_code', 'NUTS_names_code.R')
GDP_per_capita_at_NUTS1and2_code <- file.path(proj.path, 'scripts', '00_misc_code', 'GDP_per_capita_at_NUTS1and2_code.R')
urban_rural_districts_code <- file.path(proj.path, 'scripts', '00_misc_code', 'urban_rural_districts_code.R')
intervention_theme_policy_encoding_code <- file.path(proj.path, 'scripts', '00_misc_code', 'intervention_theme_policy_encoding_code.R')
# make sure you have the latest.de file located in the next script
interreg_expenditure_shares_code <- file.path(proj.path, 'scripts', '00_misc_code', 'interreg_expenditure_shares_code.R')
expenditure_histogram_plot <- file.path(proj.path, 'scripts', '03_expenditure_histogram_plot', 'funding_histogram_code_and_plot.R')
# running code
source(packages)
source(ERDF_clean_code)
source(unclean_initial_and_qualitative_data_encoding)
source(NUTS_names)
source(GDP_per_capita_at_NUTS1and2_code)
source(urban_rural_districts_code)
source(intervention_theme_policy_encoding_code)
source(interreg_expenditure_shares_code)
source(expenditure_histogram_plot)
library(data.table)
library(dplyr)
library(ggnewscale)
library(ggplot2)
library(gridExtra)
library(patchwork)
library(pals)
library(RColorBrewer)
library(svglite)
library(readxl)
library(reshape)
library(tidyr)
library(tidyverse)
library(viridis)
library(viridisLite)
library(rvest)
library(rmarkdown)
library(flexdashboard)
library(haven)
library(magrittr)
library(reshape2)
library(stargazer)
library(labelled)
library(Hmisc)
library(stargazer)
library(sandwich)
library(lmtest)
theme_set(theme_bw())
theme_update(text = element_text(size=12.5))
# reading files
Germany_erdf <- read.csv(file.path(proj.path, 'outputs', 'data', 'ERDF_data', 'ERDF.csv'))
# reading files
proj.path <- getwd()
Germany_erdf <- read.csv(file.path(proj.path, 'outputs', 'data', 'ERDF_data', 'ERDF.csv'))
View(Germany_erdf)
Germany_erdf$Operation_Start_Date <- substr(Germany_erdf$Operation_Start_Date, nchar(Germany_erdf$Operation_Start_Date) - 3, nchar(Germany_erdf$Operation_Start_Date))
unique(Germany_erdf$Operation_Start_Date)
Germany_erdf$Operation_End_Date <- substr(Germany_erdf$Operation_End_Date, nchar(Germany_erdf$Operation_End_Date) - 3, nchar(Germany_erdf$Operation_End_Date))
Germany_erdf$Operation_Start_Date <- as.numeric(Germany_erdf$Operation_Start_Date)
Germany_erdf$Operation_End_Date <- as.numeric(Germany_erdf$Operation_End_Date)
unique(Germany_erdf$Operation_End_Date)
# reading files
proj.path <- getwd()
Germany_erdf <- read.csv(file.path(proj.path, 'outputs', 'data', 'ERDF_data', 'ERDF.csv'))
# taking years
Germany_erdf$Operation_Start_Date <- substr(Germany_erdf$Operation_Start_Date, nchar(Germany_erdf$Operation_Start_Date) - 3, nchar(Germany_erdf$Operation_Start_Date))
Germany_erdf$Operation_End_Date <- substr(Germany_erdf$Operation_End_Date, nchar(Germany_erdf$Operation_End_Date) - 3, nchar(Germany_erdf$Operation_End_Date))
Germany_erdf$Operation_Start_Date <- as.numeric(Germany_erdf$Operation_Start_Date)
Germany_erdf$Operation_End_Date <- as.numeric(Germany_erdf$Operation_End_Date)
Germany_erdf <- Germany_erdf %>%
select(2, 3) %>%
mutate(num_of_years = Operation_End_Date - Operation_Start_Date)
# reading files
proj.path <- getwd()
Germany_erdf <- read.csv(file.path(proj.path, 'outputs', 'data', 'ERDF_data', 'ERDF.csv'))
# taking years
Germany_erdf$Operation_Start_Date <- substr(Germany_erdf$Operation_Start_Date, nchar(Germany_erdf$Operation_Start_Date) - 3, nchar(Germany_erdf$Operation_Start_Date))
Germany_erdf$Operation_End_Date <- substr(Germany_erdf$Operation_End_Date, nchar(Germany_erdf$Operation_End_Date) - 3, nchar(Germany_erdf$Operation_End_Date))
Germany_erdf$Operation_Start_Date <- as.numeric(Germany_erdf$Operation_Start_Date)
Germany_erdf$Operation_End_Date <- as.numeric(Germany_erdf$Operation_End_Date)
Germany_erdf <- Germany_erdf %>%
filter(!grepl("^DEF", NUTS3_Code))
# reading files
proj.path <- getwd()
Germany_erdf <- read.csv(file.path(proj.path, 'outputs', 'data', 'ERDF_data', 'ERDF.csv'))
# taking years
Germany_erdf$Operation_Start_Date <- substr(Germany_erdf$Operation_Start_Date, nchar(Germany_erdf$Operation_Start_Date) - 3, nchar(Germany_erdf$Operation_Start_Date))
Germany_erdf$Operation_End_Date <- substr(Germany_erdf$Operation_End_Date, nchar(Germany_erdf$Operation_End_Date) - 3, nchar(Germany_erdf$Operation_End_Date))
Germany_erdf$Operation_Start_Date <- as.numeric(Germany_erdf$Operation_Start_Date)
Germany_erdf$Operation_End_Date <- as.numeric(Germany_erdf$Operation_End_Date)
# reading files
proj.path <- getwd()
Germany_erdf <- read.csv(file.path(proj.path, 'outputs', 'data', 'ERDF_data', 'ERDF.csv'))
# taking years
Germany_erdf$Operation_Start_Date <- substr(Germany_erdf$Operation_Start_Date, nchar(Germany_erdf$Operation_Start_Date) - 3, nchar(Germany_erdf$Operation_Start_Date))
Germany_erdf$Operation_End_Date <- substr(Germany_erdf$Operation_End_Date, nchar(Germany_erdf$Operation_End_Date) - 3, nchar(Germany_erdf$Operation_End_Date))
Germany_erdf$Operation_Start_Date <- as.numeric(Germany_erdf$Operation_Start_Date)
Germany_erdf$Operation_End_Date <- as.numeric(Germany_erdf$Operation_End_Date)
Germany_erdf <- Germany_erdf %>%
filter(!grepl("^DEF", NUTS3_Code)) %>%
select(2, 3, 5) %>%
mutate(num_of_years = Operation_End_Date - Operation_Start_Date)
Germany_erdf$weighted_mean <- weighted.mean(Germany_erdf$num_of_years, Germany_erdf$Total_Eligible_Expenditure_amount)
View(Germany_erdf)
weighted_mean <- weighted.mean(Germany_erdf$num_of_years, Germany_erdf$Total_Eligible_Expenditure_amount)
weighted_mean
weighted_mean <- weighted.mean(Germany_erdf$num_of_years, Germany_erdf$Total_Eligible_Expenditure_amount, na.rm = TRUE)
weighted_mean
weighted_mean <- weighted.mean(Germany_erdf$num_of_years, Germany_erdf$Total_Eligible_Expenditure_amount)
# reading files
proj.path <- getwd()
Germany_erdf <- read.csv(file.path(proj.path, 'outputs', 'data', 'ERDF_data', 'ERDF.csv'))
# taking years
Germany_erdf$Operation_Start_Date <- substr(Germany_erdf$Operation_Start_Date, nchar(Germany_erdf$Operation_Start_Date) - 3, nchar(Germany_erdf$Operation_Start_Date))
Germany_erdf$Operation_End_Date <- substr(Germany_erdf$Operation_End_Date, nchar(Germany_erdf$Operation_End_Date) - 3, nchar(Germany_erdf$Operation_End_Date))
Germany_erdf$Operation_Start_Date <- as.numeric(Germany_erdf$Operation_Start_Date)
Germany_erdf$Operation_End_Date <- as.numeric(Germany_erdf$Operation_End_Date)
Germany_erdf <- Germany_erdf %>%
filter(!grepl("^DEF", NUTS3_Code)) %>%
select(2, 3, 5) %>%
mutate(num_of_years = Operation_End_Date - Operation_Start_Date)
weighted_mean <- weighted.mean(Germany_erdf$num_of_years, Germany_erdf$Total_Eligible_Expenditure_amount)
weighted_mean
weighted.mean(Germany_erdf$num_of_years, Germany_erdf$Total_Eligible_Expenditure_amount)
weighted.mean(Germany_erdf$num_of_years, Germany_erdf$Total_Eligible_Expenditure_amount, na.rm = TRUE)
weighted_mean <- weighted.mean(Germany_erdf$num_of_years, Germany_erdf$Total_Eligible_Expenditure_amount, na.rm = TRUE)
Germany_erdf <- na.omit(Germany_erdf$Total_Eligible_Expenditure_amount)
# reading files
proj.path <- getwd()
Germany_erdf <- read.csv(file.path(proj.path, 'outputs', 'data', 'ERDF_data', 'ERDF.csv'))
# taking years
Germany_erdf$Operation_Start_Date <- substr(Germany_erdf$Operation_Start_Date, nchar(Germany_erdf$Operation_Start_Date) - 3, nchar(Germany_erdf$Operation_Start_Date))
Germany_erdf$Operation_End_Date <- substr(Germany_erdf$Operation_End_Date, nchar(Germany_erdf$Operation_End_Date) - 3, nchar(Germany_erdf$Operation_End_Date))
Germany_erdf$Operation_Start_Date <- as.numeric(Germany_erdf$Operation_Start_Date)
Germany_erdf$Operation_End_Date <- as.numeric(Germany_erdf$Operation_End_Date)
Germany_erdf <- Germany_erdf %>%
filter(!grepl("^DEF", NUTS3_Code)) %>%
select(2, 3, 5) %>%
mutate(num_of_years = Operation_End_Date - Operation_Start_Date)
Germany_erdf <- read.csv(file.path(proj.path, 'outputs', 'data', 'ERDF_data', 'ERDF.csv'))
# reading files
proj.path <- getwd()
Germany_erdf <- read.csv(file.path(proj.path, 'outputs', 'data', 'ERDF_data', 'ERDF.csv'))
# taking years
Germany_erdf$Operation_Start_Date <- substr(Germany_erdf$Operation_Start_Date, nchar(Germany_erdf$Operation_Start_Date) - 3, nchar(Germany_erdf$Operation_Start_Date))
Germany_erdf$Operation_End_Date <- substr(Germany_erdf$Operation_End_Date, nchar(Germany_erdf$Operation_End_Date) - 3, nchar(Germany_erdf$Operation_End_Date))
Germany_erdf$Operation_Start_Date <- as.numeric(Germany_erdf$Operation_Start_Date)
Germany_erdf$Operation_End_Date <- as.numeric(Germany_erdf$Operation_End_Date)
Germany_erdf <- Germany_erdf %>%
filter(!grepl("^DEF", NUTS3_Code)) %>%
na.omit(Total_Eligible_Expenditure_amount) %>%
select(2, 3, 5) %>%
mutate(num_of_years = Operation_End_Date - Operation_Start_Date)
weighted_mean <- weighted.mean(Germany_erdf$num_of_years, Germany_erdf$Total_Eligible_Expenditure_amount, na.rm = TRUE)
summary(Germany_erdf$num_of_years)
# reading files
proj.path <- getwd()
Germany_erdf <- read.csv(file.path(proj.path, 'outputs', 'data', 'ERDF_data', 'ERDF.csv'))
install.packages("lubridate")
library(lubridate)
install.packages("lubridate")
library(lubridate)
library(data.table)
library(dplyr)
library(ggnewscale)
library(ggplot2)
library(gridExtra)
library(patchwork)
library(pals)
library(RColorBrewer)
library(svglite)
library(readxl)
library(reshape)
library(tidyr)
library(tidyverse)
library(viridis)
library(viridisLite)
library(rvest)
library(rmarkdown)
library(flexdashboard)
library(haven)
library(magrittr)
library(reshape2)
library(stargazer)
library(labelled)
library(Hmisc)
library(stargazer)
library(sandwich)
library(lmtest)
library(lubridate)
# reading files
proj.path <- getwd()
Germany_erdf <- read.csv(file.path(proj.path, 'outputs', 'data', 'ERDF_data', 'ERDF.csv'))
# taking years
Germany_erdf$Operation_Start_Date <- as.numeric(Germany_erdf$Operation_Start_Date)
Germany_erdf$Operation_End_Date <- as.numeric(Germany_erdf$Operation_End_Date)
Germany_erdf <- Germany_erdf %>%
filter(!grepl("^DEF", NUTS3_Code)) %>%
na.omit(Total_Eligible_Expenditure_amount) %>%
select(2, 3, 5)
Germany_erdf$Operation_Start_Date <- dmy(Germany_erdf$Operation_Start_Date)
Germany_erdf$Operation_End_Date <- dmy(Germany_erdf$Operation_End_Date)
Germany_erdf$months_between <- interval(Germany_erdf$Operation_Start_Date, Germany_erdf$Operation_End_Date) %/% months(1)
weighted_mean <- weighted.mean(Germany_erdf$num_of_years, Germany_erdf$Total_Eligible_Expenditure_amount, na.rm = TRUE)
# reading files
proj.path <- getwd()
Germany_erdf <- read.csv(file.path(proj.path, 'outputs', 'data', 'ERDF_data', 'ERDF.csv'))
# taking years
Germany_erdf$Operation_Start_Date <- as.numeric(Germany_erdf$Operation_Start_Date)
Germany_erdf$Operation_End_Date <- as.numeric(Germany_erdf$Operation_End_Date)
Germany_erdf <- Germany_erdf %>%
filter(!grepl("^DEF", NUTS3_Code)) %>%
na.omit(Total_Eligible_Expenditure_amount) %>%
select(2, 3, 5)
Germany_erdf$Operation_Start_Date <- dmy(Germany_erdf$Operation_Start_Date)
Germany_erdf$Operation_End_Date <- dmy(Germany_erdf$Operation_End_Date)
Germany_erdf$months_between <- interval(Germany_erdf$Operation_Start_Date, Germany_erdf$Operation_End_Date) %/% months(1)
# reading files
proj.path <- getwd()
Germany_erdf <- read.csv(file.path(proj.path, 'outputs', 'data', 'ERDF_data', 'ERDF.csv'))
# taking years
Germany_erdf$Operation_Start_Date <- as.numeric(Germany_erdf$Operation_Start_Date)
Germany_erdf$Operation_End_Date <- as.numeric(Germany_erdf$Operation_End_Date)
Germany_erdf <- Germany_erdf %>%
filter(!grepl("^DEF", NUTS3_Code)) %>%
na.omit(Total_Eligible_Expenditure_amount) %>%
select(2, 3, 5)
View(Germany_erdf)
# reading files
proj.path <- getwd()
Germany_erdf <- read.csv(file.path(proj.path, 'outputs', 'data', 'ERDF_data', 'ERDF.csv'))
# taking years
Germany_erdf$Operation_Start_Date <- as.numeric(Germany_erdf$Operation_Start_Date)
Germany_erdf$Operation_End_Date <- as.numeric(Germany_erdf$Operation_End_Date)
# reading files
proj.path <- getwd()
Germany_erdf <- read.csv(file.path(proj.path, 'outputs', 'data', 'ERDF_data', 'ERDF.csv'))
# taking years
Germany_erdf <- Germany_erdf %>%
filter(!grepl("^DEF", NUTS3_Code)) %>%
na.omit(Total_Eligible_Expenditure_amount) %>%
select(2, 3, 5)
Germany_erdf$Operation_Start_Date <- as.numeric(Germany_erdf$Operation_Start_Date)
# reading files
proj.path <- getwd()
Germany_erdf <- read.csv(file.path(proj.path, 'outputs', 'data', 'ERDF_data', 'ERDF.csv'))
# taking years
Germany_erdf <- Germany_erdf %>%
filter(!grepl("^DEF", NUTS3_Code)) %>%
na.omit(Total_Eligible_Expenditure_amount) %>%
select(2, 3, 5)
Germany_erdf$Operation_Start_Date <- dmy(Germany_erdf$Operation_Start_Date)
Germany_erdf$Operation_End_Date <- dmy(Germany_erdf$Operation_End_Date)
Germany_erdf$months_between <- interval(Germany_erdf$Operation_Start_Date, Germany_erdf$Operation_End_Date) %/% months(1)
Germany_erdf$years_between <- Germany_erdf$months_between / 12
weighted_mean <- weighted.mean(Germany_erdf$years_between, Germany_erdf$Total_Eligible_Expenditure_amount, na.rm = TRUE)
summary(Germany_erdf$years_between)
View(Germany_erdf)
theme_set(theme_bw())
theme_update(text = element_text(size = 10))
Germany_erdf <- read.csv("E:\\School - work\\RA\\~ Germany_place-based_policies\\.r file\\outputs\\data\\ERDF_data\\ERDF.csv")
manufacturing_shares <- read.csv("E:\\School - work\\RA\\~ Germany_place-based_policies\\.r file\\outputs\\data\\IOT_Data\\NUTS3_manufacturing_shares.csv")
Urban_rural <- read.csv("E:\\School - work\\RA\\~ Germany_place-based_policies\\.r file\\outputs\\data\\NUTS_names\\NUTS3_names_urban_rural.csv")
encoding <- read.csv("E:\\School - work\\RA\\~ Germany_place-based_policies\\.r file\\outputs\\data\\ERDF_data\\encoding_and_labels_for_qualitative_variables\\themetic_objective_encoding.csv")
GDP_per_capita <- read.csv("E:\\School - work\\RA\\~ Germany_place-based_policies\\.r file\\data\\GDP_per_capita_NUTS3\\OECD_GDP_per_capita_NUTS3.csv")
GDP_per_capita_Thuringia <- read.csv("E:\\School - work\\RA\\~ Germany_place-based_policies\\.r file\\data\\GDP_per_capita_NUTS3\\OECD_GDP_per_capita_Thuringia_NUTS3.csv")
OECD_GDP_per_state <- read.csv("E:\\School - work\\RA\\~ Germany_place-based_policies\\.r file\\data\\GDP_per_capita_NUTS3\\OECD_GDP_per_state_NUTS1.csv")
# selecting region, theme, funding
Germany_erdf <- Germany_erdf[, c(13, 8, 5)]
# replacing blank theme with the work "Blank"
Germany_erdf$Thematic_Objective_ID[Germany_erdf$Thematic_Objective_ID == ""] <- NA
Germany_erdf <- Germany_erdf %>%
filter(!grepl("^DEF", NUTS3_Code))
View(Germany_erdf)
# share1: (region-theme funding)/(region funding) -- adding up across themes by region should be 1; regress on (region's GDP/capita)
# share2: (region-theme funding)/(theme funding) -- adding up across regions by theme should be 1; regress on (region's gdp/capita) * factor(theme)
Germany_theme_shares_erdf <- Germany_erdf %>%
group_by(NUTS3_Code, Thematic_Objective_ID) %>%
summarise(funding_per_region_per_theme = sum(Total_Eligible_Expenditure_amount, na.rm = TRUE)) %>%
ungroup() %>%
group_by(NUTS3_Code) %>%
mutate(funding_per_region = sum(funding_per_region_per_theme, na.rm = TRUE)) %>%
mutate(share1 = funding_per_region_per_theme / funding_per_region) %>%
mutate(Share1_sum_check = sum(share1)) %>%
ungroup() %>%
group_by(Thematic_Objective_ID) %>%
mutate(funding_per_theme = sum(funding_per_region_per_theme, na.rm = TRUE)) %>%
mutate(share2 = funding_per_region_per_theme / funding_per_theme) %>%
mutate(Share2_sum_check = sum(share2))
# GDP per capita
# adding Thuringia GDP data
GDP_per_capita <- rbind(GDP_per_capita, GDP_per_capita_Thuringia)
## selecting NUTS3 (3), national currency per head in current prices (9), year (14), GDP_per_capita (21)
GDP_per_capita <- GDP_per_capita %>%
select(3, 9, 14, 21) %>%
filter(MEAS == "PC_CURR_PR", Year == 2010) %>%
select(1, 4)
names(GDP_per_capita)[1] <- "NUTS3"
names(GDP_per_capita)[2] <- "GDPpercap"
Germany_theme_shares_erdf$GDPpercap <- GDP_per_capita$GDPpercap[match(Germany_theme_shares_erdf$NUTS3_Code, GDP_per_capita$NUTS3)]
names(Germany_theme_shares_erdf)[2] <- "theme"
Germany_theme_shares_erdf$uxr <- Urban_rural$adminstration[match(Germany_theme_shares_erdf$NUTS3_Code, Urban_rural$NUTS3)]
Germany_theme_shares_erdf$t <- encoding$Thematic_Objective_Label[match(Germany_theme_shares_erdf$theme, encoding$Thematic_Objective_ID)]
Germany_theme_shares_erdf$ms <- manufacturing_shares$manufacturing_shares[match(Germany_theme_shares_erdf$NUTS3_Code, manufacturing_shares$NUTS3)]
View(Germany_theme_shares_erdf)
high_tech <- read.csv("E:\\School - work\\RA\\~ Germany_place-based_policies\\.r file\\data\\High tech patent apps per nuts3\\high_tech_patent.csv")
View(high_tech)
source("E:/School - work/RA/~ Germany_housing_and_place_based_policy_funding/.r file/scripts/04_high_tech_patent_apps/high_tech_patent_apps_code.R", echo=TRUE)
# reading in files
proj.path <- getwd()
high_tech <- read.csv(file.path(proj.path, "data", "High tech patent apps per nuts3", "high_tech_patent.csv"))
# reading in files
proj.path <- getwd()
high_tech <- read.csv(file.path(proj.path, "data", "High tech patent apps per nuts3", "high_tech_patent.csv"))
# reading in files
proj.path <- getwd()
high_tech <- read.csv(file.path(proj.path, "data", "High tech patent apps per nuts3", "high_tech_patent.csv"))
urban_rural <- read.csv(file.path(proj.path, "outputs", "data", "NUTS_names", "NUTS3_names_urban_rural.csv"))
names(high_tech)[6] <- "NUTS3"
names(high_tech)[8] <- "apps"
high_tech <- high_tech %>%
select(5:8) %>%
filter(unit == "NR", TIME_PERIOD == 2010) %>%
select(2, 4) %>%
mutate(NUTS3 = ifelse(NUTS3 == "DE915", "DE91C", NUTS3),
NUTS3 = ifelse(NUTS3 == "DE80F", "DE80N", NUTS3),
NUTS3 = ifelse(NUTS3 == "DE801", "DE80N", NUTS3),
NUTS3 = ifelse(NUTS3 == "DE807", "DE80K", NUTS3),
NUTS3 = ifelse(NUTS3 == "DE80B", "DE80J", NUTS3),
NUTS3 = ifelse(NUTS3 == "DE80C", "DE80J", NUTS3),
NUTS3 = ifelse(NUTS3 == "DE80D", "DE80L", NUTS3),
NUTS3 = ifelse(NUTS3 == "DE80E", "DE80M", NUTS3),
NUTS3 = ifelse(NUTS3 == "DEB19", "DEB1D", NUTS3)) %>%
group_by(NUTS3) %>%
summarise(apps = sum(apps, na.rm = TRUE))
urban_rural <- urban_rural %>% select(1)
high_tech <- left_join(urban_rural, high_tech, by = c("NUTS3"))
high_tech <- high_tech %>%
mutate(apps = ifelse(is.na(apps), 0, apps)) %>%
mutate(tech = case_when(
apps < 0.75 ~ "lowest",
apps >= 0.75 & apps <= 2.49 ~ "low",
apps > 2.49 & apps <= 6.94 ~ "high",
apps > 6.94 ~ "highest"
)) %>%
arrange(apps)
write.csv(high_tech, file.path(proj.path, "outputs", "data", "NUTS_names","NUTS3_names_tech.csv"), row.names = FALSE)
View(high_tech)
# reading files
proj.path <- getwd()
Germany_erdf <- read.csv(file.path(proj.path, 'outputs', 'data', 'ERDF_data', 'ERDF.csv'))
# taking years
Germany_erdf <- Germany_erdf %>%
filter(!grepl("^DEF", NUTS3_Code)) %>%
na.omit(Total_Eligible_Expenditure_amount) %>%
select(2, 3, 5)
Germany_erdf$Operation_Start_Date <- dmy(Germany_erdf$Operation_Start_Date)
Germany_erdf$Operation_End_Date <- dmy(Germany_erdf$Operation_End_Date)
Germany_erdf$months_between <- interval(Germany_erdf$Operation_Start_Date, Germany_erdf$Operation_End_Date) %/% months(1)
Germany_erdf$years_between <- Germany_erdf$months_between / 12
weighted_mean <- weighted.mean(Germany_erdf$years_between, Germany_erdf$Total_Eligible_Expenditure_amount, na.rm = TRUE)
