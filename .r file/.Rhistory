years_per_project <- read.csv(file.path(proj.path, "outputs", "data", "ERDF_data", "years_per_project.csv"))
NUTS2 <- read.csv(file.path(proj.path, "outputs", "data", "NUTS_names", "NUTS2_names.csv"))
GDP_per_capita <- read.csv(file.path(proj.path, "data", "GDP_per_capita_NUTS3", "OECD_GDP_per_capita_NUTS3.csv"))
GDP_per_capita_Thuringia <- read.csv(file.path(proj.path, "data", "GDP_per_capita_NUTS3", "OECD_GDP_per_capita_Thuringia_NUTS3.csv"))
# year, policy, NUTS3, funding
Germany_erdf <- Germany_erdf %>%
mutate(X = row_number()) %>%
select(17, 2, 13, 9, 5)
names(Germany_erdf)[2] <- "year"
names(Germany_erdf)[3] <- "NUTS3"
names(Germany_erdf)[4] <- "policy"
names(Germany_erdf)[5] <- "funding"
Germany_erdf$year <- substr(Germany_erdf$year, nchar(Germany_erdf$year) - 3, nchar(Germany_erdf$year))
Germany_erdf$year_per_project <- years_per_project$years_between[match(Germany_erdf$X, years_per_project$X)]
Germany_erdf$year <- as.numeric(Germany_erdf$year)
Germany_erdf <- Germany_erdf %>%
filter(policy != "") %>%
rowwise() %>%
mutate(
years = list(year + 0:(year_per_project - 1)),
allocated_funding = funding / year_per_project
) %>%
unnest(years) %>%
select(-X, -funding, -year_per_project, -year) %>%
ungroup()
Germany_erdf_by_year_region_policy <- Germany_erdf %>%
group_by(years, NUTS3, policy) %>%
summarise(allocated_funding = sum(allocated_funding, na.rm = TRUE)) %>%
arrange(years, NUTS3) %>%
ungroup() %>%
filter(
years >= 2014,
years <= 2019
)
Germany_erdf_by_year_region_policy_every2years <- Germany_erdf %>%
filter(
years >= 2014,
years <= 2019
) %>%
mutate(year = floor(years / 2) * 2) %>%
group_by(year, NUTS3, policy) %>%
summarise(allocated_funding = sum(allocated_funding, na.rm = TRUE)) %>%
arrange(year, NUTS3) %>%
mutate(
year = as.character(year),
year = case_when(
year == "2014" ~ "2014-2015",
year == "2016" ~ "2016-2017",
year == "2018" ~ "2018-2019",
TRUE ~ year
)
)
Germany_erdf_by_year_region <- Germany_erdf %>%
select(3, 1, 4) %>%
filter(
years >= 2014,
years <= 2019
) %>%
mutate(year = floor(years / 2) * 2) %>%
group_by(year, NUTS3) %>%
summarise(allocated_funding = sum(allocated_funding, na.rm = TRUE)) %>%
mutate(
year = as.character(year),
year = case_when(
year == "2014" ~ "2014-2015",
year == "2016" ~ "2016-2017",
year == "2018" ~ "2018-2019",
TRUE ~ year
)
)
# logs of funding
Germany_erdf_by_year_region_policy_every2years$allocated_funding <- log(Germany_erdf_by_year_region_policy_every2years$allocated_funding)
Germany_erdf_by_year_region$allocated_funding <- log(Germany_erdf_by_year_region$allocated_funding)
# squaring off missing regions and policies and pivoting wider
join_1 <- expand.grid(
year = unique(Germany_erdf_by_year_region_policy_every2years$year),
NUTS3 = unique(Germany_erdf$NUTS3),
policy = unique(Germany_erdf$policy)
)
join_2 <- expand.grid(
year = unique(Germany_erdf_by_year_region$year),
NUTS3 = unique(Germany_erdf$NUTS3)
)
Germany_erdf_by_year_region_policy_every2years <- left_join(join_1, Germany_erdf_by_year_region_policy_every2years, by = c("year", "NUTS3", "policy"))
Germany_erdf_by_year_region <- left_join(join_2, Germany_erdf_by_year_region, by = c("year", "NUTS3"))
# zeros for missing funding
Germany_erdf_by_year_region_policy_every2years[is.na(Germany_erdf_by_year_region_policy_every2years)] <- 0
Germany_erdf_by_year_region[is.na(Germany_erdf_by_year_region)] <- 0
Germany_erdf_by_year_region_policy_every2years <- Germany_erdf_by_year_region_policy_every2years %>%
mutate(year = as.factor(year),
NUTS3 = as.factor(NUTS3),
policy = as.factor(policy)) %>%
pivot_wider(names_from = year, values_from = c(allocated_funding))
Germany_erdf_by_year_region <- Germany_erdf_by_year_region %>%
mutate(year = as.factor(year),
NUTS3 = as.factor(NUTS3)) %>%
pivot_wider(names_from = year, values_from = c(allocated_funding))
# GDP per capita
GDP_per_capita <- rbind(GDP_per_capita, GDP_per_capita_Thuringia)
GDP_per_capita_2020 <- GDP_per_capita %>%
select(3, 9, 14, 21) %>%
filter(MEAS == "PC_CURR_PR", Year == 2020) %>%
select(1, 4)
names(GDP_per_capita_2020)[1] <- "NUTS3"
names(GDP_per_capita_2020)[2] <- "GDP_per_capita"
Germany_erdf_by_year_region_policy_every2years$GDPpercap_2020 <- GDP_per_capita_2020$GDP_per_capita[match(Germany_erdf_by_year_region_policy_every2years$NUTS3, GDP_per_capita_2020$NUTS3)]
Germany_erdf_by_year_region$GDPpercap_2020 <- GDP_per_capita_2020$GDP_per_capita[match(Germany_erdf_by_year_region$NUTS3, GDP_per_capita_2020$NUTS3)]
### 2018
GDP_per_capita_2018 <- GDP_per_capita %>%
select(3, 9, 14, 21) %>%
filter(MEAS == "PC_CURR_PR", Year == 2018) %>%
select(1, 4)
names(GDP_per_capita_2018)[1] <- "NUTS3"
names(GDP_per_capita_2018)[2] <- "GDP_per_capita"
Germany_erdf_by_year_region_policy_every2years$GDPpercap_2018 <- GDP_per_capita_2018$GDP_per_capita[match(Germany_erdf_by_year_region_policy_every2years$NUTS3, GDP_per_capita_2018$NUTS3)]
Germany_erdf_by_year_region$GDPpercap_2018 <- GDP_per_capita_2018$GDP_per_capita[match(Germany_erdf_by_year_region$NUTS3, GDP_per_capita_2018$NUTS3)]
Germany_erdf_by_year_region_policy_every2years$GDPpercap_2020 <- log(Germany_erdf_by_year_region_policy_every2years$GDPpercap_2020)
Germany_erdf_by_year_region$GDPpercap_2020 <- log(Germany_erdf_by_year_region$GDPpercap_2020)
Germany_erdf_by_year_region_policy_every2years$GDPpercap_2018 <- log(Germany_erdf_by_year_region_policy_every2years$GDPpercap_2018)
Germany_erdf_by_year_region$GDPpercap_2018 <- log(Germany_erdf_by_year_region$GDPpercap_2018)
View(Germany_erdf_by_year_region)
# reading files
proj.path <- getwd()
Germany_erdf <- read.csv(file.path(proj.path, "outputs", "data", "ERDF_data", "ERDF.csv"))
years_per_project <- read.csv(file.path(proj.path, "outputs", "data", "ERDF_data", "years_per_project.csv"))
NUTS2 <- read.csv(file.path(proj.path, "outputs", "data", "NUTS_names", "NUTS2_names.csv"))
GDP_per_capita <- read.csv(file.path(proj.path, "data", "GDP_per_capita_NUTS3", "OECD_GDP_per_capita_NUTS3.csv"))
GDP_per_capita_Thuringia <- read.csv(file.path(proj.path, "data", "GDP_per_capita_NUTS3", "OECD_GDP_per_capita_Thuringia_NUTS3.csv"))
# year, policy, NUTS3, funding
Germany_erdf <- Germany_erdf %>%
mutate(X = row_number()) %>%
select(17, 2, 13, 9, 5)
names(Germany_erdf)[2] <- "year"
names(Germany_erdf)[3] <- "NUTS3"
names(Germany_erdf)[4] <- "policy"
names(Germany_erdf)[5] <- "funding"
Germany_erdf$year <- substr(Germany_erdf$year, nchar(Germany_erdf$year) - 3, nchar(Germany_erdf$year))
Germany_erdf$year_per_project <- years_per_project$years_between[match(Germany_erdf$X, years_per_project$X)]
Germany_erdf$year <- as.numeric(Germany_erdf$year)
Germany_erdf <- Germany_erdf %>%
filter(policy != "") %>%
rowwise() %>%
mutate(
years = list(year + 0:(year_per_project - 1)),
allocated_funding = funding / year_per_project
) %>%
unnest(years) %>%
select(-X, -funding, -year_per_project, -year) %>%
ungroup()
Germany_erdf_by_year_region_policy <- Germany_erdf %>%
group_by(years, NUTS3, policy) %>%
summarise(allocated_funding = sum(allocated_funding, na.rm = TRUE)) %>%
arrange(years, NUTS3) %>%
ungroup() %>%
filter(
years >= 2014,
years <= 2019
)
Germany_erdf_by_year_region_policy_every2years <- Germany_erdf %>%
filter(
years >= 2014,
years <= 2019
) %>%
mutate(year = floor(years / 2) * 2) %>%
group_by(year, NUTS3, policy) %>%
summarise(allocated_funding = sum(allocated_funding, na.rm = TRUE)) %>%
arrange(year, NUTS3) %>%
mutate(
year = as.character(year),
year = case_when(
year == "2014" ~ "years_2014_15",
year == "2016" ~ "years_2016_17",
year == "2018" ~ "years_2018-19",
TRUE ~ year
)
)
Germany_erdf_by_year_region <- Germany_erdf %>%
select(3, 1, 4) %>%
filter(
years >= 2014,
years <= 2019
) %>%
mutate(year = floor(years / 2) * 2) %>%
group_by(year, NUTS3) %>%
summarise(allocated_funding = sum(allocated_funding, na.rm = TRUE)) %>%
mutate(
year = as.character(year),
year = case_when(
year == "2014" ~ "years_2014_15",
year == "2016" ~ "years_2016_17",
year == "2018" ~ "years_2018-19",
TRUE ~ year
)
)
# logs of funding
Germany_erdf_by_year_region_policy_every2years$allocated_funding <- log(Germany_erdf_by_year_region_policy_every2years$allocated_funding)
Germany_erdf_by_year_region$allocated_funding <- log(Germany_erdf_by_year_region$allocated_funding)
# squaring off missing regions and policies and pivoting wider
join_1 <- expand.grid(
year = unique(Germany_erdf_by_year_region_policy_every2years$year),
NUTS3 = unique(Germany_erdf$NUTS3),
policy = unique(Germany_erdf$policy)
)
join_2 <- expand.grid(
year = unique(Germany_erdf_by_year_region$year),
NUTS3 = unique(Germany_erdf$NUTS3)
)
Germany_erdf_by_year_region_policy_every2years <- left_join(join_1, Germany_erdf_by_year_region_policy_every2years, by = c("year", "NUTS3", "policy"))
Germany_erdf_by_year_region <- left_join(join_2, Germany_erdf_by_year_region, by = c("year", "NUTS3"))
# zeros for missing funding
Germany_erdf_by_year_region_policy_every2years[is.na(Germany_erdf_by_year_region_policy_every2years)] <- 0
Germany_erdf_by_year_region[is.na(Germany_erdf_by_year_region)] <- 0
Germany_erdf_by_year_region_policy_every2years <- Germany_erdf_by_year_region_policy_every2years %>%
mutate(year = as.factor(year),
NUTS3 = as.factor(NUTS3),
policy = as.factor(policy)) %>%
pivot_wider(names_from = year, values_from = c(allocated_funding))
Germany_erdf_by_year_region <- Germany_erdf_by_year_region %>%
mutate(year = as.factor(year),
NUTS3 = as.factor(NUTS3)) %>%
pivot_wider(names_from = year, values_from = c(allocated_funding))
# GDP per capita
GDP_per_capita <- rbind(GDP_per_capita, GDP_per_capita_Thuringia)
GDP_per_capita_2020 <- GDP_per_capita %>%
select(3, 9, 14, 21) %>%
filter(MEAS == "PC_CURR_PR", Year == 2020) %>%
select(1, 4)
names(GDP_per_capita_2020)[1] <- "NUTS3"
names(GDP_per_capita_2020)[2] <- "GDP_per_capita"
Germany_erdf_by_year_region_policy_every2years$GDPpercap_2020 <- GDP_per_capita_2020$GDP_per_capita[match(Germany_erdf_by_year_region_policy_every2years$NUTS3, GDP_per_capita_2020$NUTS3)]
Germany_erdf_by_year_region$GDPpercap_2020 <- GDP_per_capita_2020$GDP_per_capita[match(Germany_erdf_by_year_region$NUTS3, GDP_per_capita_2020$NUTS3)]
### 2018
GDP_per_capita_2018 <- GDP_per_capita %>%
select(3, 9, 14, 21) %>%
filter(MEAS == "PC_CURR_PR", Year == 2018) %>%
select(1, 4)
names(GDP_per_capita_2018)[1] <- "NUTS3"
names(GDP_per_capita_2018)[2] <- "GDP_per_capita"
Germany_erdf_by_year_region_policy_every2years$GDPpercap_2018 <- GDP_per_capita_2018$GDP_per_capita[match(Germany_erdf_by_year_region_policy_every2years$NUTS3, GDP_per_capita_2018$NUTS3)]
Germany_erdf_by_year_region$GDPpercap_2018 <- GDP_per_capita_2018$GDP_per_capita[match(Germany_erdf_by_year_region$NUTS3, GDP_per_capita_2018$NUTS3)]
Germany_erdf_by_year_region_policy_every2years$GDPpercap_2020 <- log(Germany_erdf_by_year_region_policy_every2years$GDPpercap_2020)
Germany_erdf_by_year_region$GDPpercap_2020 <- log(Germany_erdf_by_year_region$GDPpercap_2020)
Germany_erdf_by_year_region_policy_every2years$GDPpercap_2018 <- log(Germany_erdf_by_year_region_policy_every2years$GDPpercap_2018)
Germany_erdf_by_year_region$GDPpercap_2018 <- log(Germany_erdf_by_year_region$GDPpercap_2018)
# saving files
write.csv(Germany_erdf_by_year_region, file.path(proj.path, 'outputs', 'data', 'ERDF_data', 'funding_year_region_18_20_GDP.csv'), row.names = FALSE)
library(data.table)
library(dplyr)
library(ggnewscale)
library(ggplot2)
library(gridExtra)
library(patchwork)
library(pals)
library(RColorBrewer)
library(svglite)
library(readxl)
library(reshape)
library(tidyr)
library(tidyverse)
library(viridis)
library(viridisLite)
library(rvest)
library(rmarkdown)
library(flexdashboard)
library(haven)
library(magrittr)
library(reshape2)
library(stargazer)
library(labelled)
library(Hmisc)
library(stargazer)
library(sandwich)
library(lmtest)
library(lubridate)
theme_set(theme_bw())
theme_update(text = element_text(size=12.5))
# reading in file ####
funding_and_gdp <- read.csv("E:\\School - work\\RA\\~ Germany_housing_and_place_based_policy_funding\\.r file\\outputs\\data\\ERDF_data\\funding_year_region_18_20_GDP.csv")
library(data.table)
library(dplyr)
library(ggnewscale)
library(ggplot2)
library(gridExtra)
library(patchwork)
library(pals)
library(RColorBrewer)
library(svglite)
library(readxl)
library(reshape)
library(tidyr)
library(tidyverse)
library(viridis)
library(viridisLite)
library(rvest)
library(rmarkdown)
library(flexdashboard)
library(haven)
library(magrittr)
library(reshape2)
library(stargazer)
library(labelled)
library(Hmisc)
library(stargazer)
library(sandwich)
library(lmtest)
library(lubridate)
theme_set(theme_bw())
theme_update(text = element_text(size=12.5))
# reading in file ####
funding_and_gdp <- read.csv("E:\\School - work\\RA\\~ Germany_housing_and_place_based_policy_funding\\.r file\\outputs\\data\\ERDF_data\\funding_year_region_18_20_GDP.csv")
View(funding_and_gdp)
# reading files
proj.path <- getwd()
Germany_erdf <- read.csv(file.path(proj.path, "outputs", "data", "ERDF_data", "ERDF.csv"))
years_per_project <- read.csv(file.path(proj.path, "outputs", "data", "ERDF_data", "years_per_project.csv"))
NUTS2 <- read.csv(file.path(proj.path, "outputs", "data", "NUTS_names", "NUTS2_names.csv"))
GDP_per_capita <- read.csv(file.path(proj.path, "data", "GDP_per_capita_NUTS3", "OECD_GDP_per_capita_NUTS3.csv"))
GDP_per_capita_Thuringia <- read.csv(file.path(proj.path, "data", "GDP_per_capita_NUTS3", "OECD_GDP_per_capita_Thuringia_NUTS3.csv"))
# year, policy, NUTS3, funding
Germany_erdf <- Germany_erdf %>%
mutate(X = row_number()) %>%
select(17, 2, 13, 9, 5)
names(Germany_erdf)[2] <- "year"
names(Germany_erdf)[3] <- "NUTS3"
names(Germany_erdf)[4] <- "policy"
names(Germany_erdf)[5] <- "funding"
Germany_erdf$year <- substr(Germany_erdf$year, nchar(Germany_erdf$year) - 3, nchar(Germany_erdf$year))
Germany_erdf$year_per_project <- years_per_project$years_between[match(Germany_erdf$X, years_per_project$X)]
Germany_erdf$year <- as.numeric(Germany_erdf$year)
Germany_erdf <- Germany_erdf %>%
filter(policy != "") %>%
rowwise() %>%
mutate(
years = list(year + 0:(year_per_project - 1)),
allocated_funding = funding / year_per_project
) %>%
unnest(years) %>%
select(-X, -funding, -year_per_project, -year) %>%
ungroup()
Germany_erdf_by_year_region_policy <- Germany_erdf %>%
group_by(years, NUTS3, policy) %>%
summarise(allocated_funding = sum(allocated_funding, na.rm = TRUE)) %>%
arrange(years, NUTS3) %>%
ungroup() %>%
filter(
years >= 2014,
years <= 2019
)
Germany_erdf_by_year_region_policy_every2years <- Germany_erdf %>%
filter(
years >= 2014,
years <= 2019
) %>%
mutate(year = floor(years / 2) * 2) %>%
group_by(year, NUTS3, policy) %>%
summarise(allocated_funding = sum(allocated_funding, na.rm = TRUE)) %>%
arrange(year, NUTS3) %>%
mutate(
year = as.character(year),
year = case_when(
year == "2014" ~ "years_2014_15",
year == "2016" ~ "years_2016_17",
year == "2018" ~ "years_2018_19",
TRUE ~ year
)
)
Germany_erdf_by_year_region <- Germany_erdf %>%
select(3, 1, 4) %>%
filter(
years >= 2014,
years <= 2019
) %>%
mutate(year = floor(years / 2) * 2) %>%
group_by(year, NUTS3) %>%
summarise(allocated_funding = sum(allocated_funding, na.rm = TRUE)) %>%
mutate(
year = as.character(year),
year = case_when(
year == "2014" ~ "years_2014_15",
year == "2016" ~ "years_2016_17",
year == "2018" ~ "years_2018_19",
TRUE ~ year
)
)
# logs of funding
Germany_erdf_by_year_region_policy_every2years$allocated_funding <- log(Germany_erdf_by_year_region_policy_every2years$allocated_funding)
Germany_erdf_by_year_region$allocated_funding <- log(Germany_erdf_by_year_region$allocated_funding)
# squaring off missing regions and policies and pivoting wider
join_1 <- expand.grid(
year = unique(Germany_erdf_by_year_region_policy_every2years$year),
NUTS3 = unique(Germany_erdf$NUTS3),
policy = unique(Germany_erdf$policy)
)
join_2 <- expand.grid(
year = unique(Germany_erdf_by_year_region$year),
NUTS3 = unique(Germany_erdf$NUTS3)
)
Germany_erdf_by_year_region_policy_every2years <- left_join(join_1, Germany_erdf_by_year_region_policy_every2years, by = c("year", "NUTS3", "policy"))
Germany_erdf_by_year_region <- left_join(join_2, Germany_erdf_by_year_region, by = c("year", "NUTS3"))
# zeros for missing funding
Germany_erdf_by_year_region_policy_every2years[is.na(Germany_erdf_by_year_region_policy_every2years)] <- 0
Germany_erdf_by_year_region[is.na(Germany_erdf_by_year_region)] <- 0
Germany_erdf_by_year_region_policy_every2years <- Germany_erdf_by_year_region_policy_every2years %>%
mutate(year = as.factor(year),
NUTS3 = as.factor(NUTS3),
policy = as.factor(policy)) %>%
pivot_wider(names_from = year, values_from = c(allocated_funding))
Germany_erdf_by_year_region <- Germany_erdf_by_year_region %>%
mutate(year = as.factor(year),
NUTS3 = as.factor(NUTS3)) %>%
pivot_wider(names_from = year, values_from = c(allocated_funding))
# GDP per capita
GDP_per_capita <- rbind(GDP_per_capita, GDP_per_capita_Thuringia)
GDP_per_capita_2020 <- GDP_per_capita %>%
select(3, 9, 14, 21) %>%
filter(MEAS == "PC_CURR_PR", Year == 2020) %>%
select(1, 4)
names(GDP_per_capita_2020)[1] <- "NUTS3"
names(GDP_per_capita_2020)[2] <- "GDP_per_capita"
Germany_erdf_by_year_region_policy_every2years$GDPpercap_2020 <- GDP_per_capita_2020$GDP_per_capita[match(Germany_erdf_by_year_region_policy_every2years$NUTS3, GDP_per_capita_2020$NUTS3)]
Germany_erdf_by_year_region$GDPpercap_2020 <- GDP_per_capita_2020$GDP_per_capita[match(Germany_erdf_by_year_region$NUTS3, GDP_per_capita_2020$NUTS3)]
### 2018
GDP_per_capita_2018 <- GDP_per_capita %>%
select(3, 9, 14, 21) %>%
filter(MEAS == "PC_CURR_PR", Year == 2018) %>%
select(1, 4)
names(GDP_per_capita_2018)[1] <- "NUTS3"
names(GDP_per_capita_2018)[2] <- "GDP_per_capita"
Germany_erdf_by_year_region_policy_every2years$GDPpercap_2018 <- GDP_per_capita_2018$GDP_per_capita[match(Germany_erdf_by_year_region_policy_every2years$NUTS3, GDP_per_capita_2018$NUTS3)]
Germany_erdf_by_year_region$GDPpercap_2018 <- GDP_per_capita_2018$GDP_per_capita[match(Germany_erdf_by_year_region$NUTS3, GDP_per_capita_2018$NUTS3)]
Germany_erdf_by_year_region_policy_every2years$GDPpercap_2020 <- log(Germany_erdf_by_year_region_policy_every2years$GDPpercap_2020)
Germany_erdf_by_year_region$GDPpercap_2020 <- log(Germany_erdf_by_year_region$GDPpercap_2020)
Germany_erdf_by_year_region_policy_every2years$GDPpercap_2018 <- log(Germany_erdf_by_year_region_policy_every2years$GDPpercap_2018)
Germany_erdf_by_year_region$GDPpercap_2018 <- log(Germany_erdf_by_year_region$GDPpercap_2018)
# saving files
write.csv(Germany_erdf_by_year_region, file.path(proj.path, 'outputs', 'data', 'ERDF_data', 'funding_year_region_18_20_GDP.csv'), row.names = FALSE)
library(data.table)
library(dplyr)
library(ggnewscale)
library(ggplot2)
library(gridExtra)
library(patchwork)
library(pals)
library(RColorBrewer)
library(svglite)
library(readxl)
library(reshape)
library(tidyr)
library(tidyverse)
library(viridis)
library(viridisLite)
library(rvest)
library(rmarkdown)
library(flexdashboard)
library(haven)
library(magrittr)
library(reshape2)
library(stargazer)
library(labelled)
library(Hmisc)
library(stargazer)
library(sandwich)
library(lmtest)
library(lubridate)
theme_set(theme_bw())
theme_update(text = element_text(size=12.5))
# reading in file ####
funding_and_gdp <- read.csv("E:\\School - work\\RA\\~ Germany_housing_and_place_based_policy_funding\\.r file\\outputs\\data\\ERDF_data\\funding_year_region_18_20_GDP.csv")
View(funding_and_gdp)
knitr::opts_chunk$set(echo = TRUE)
library(data.table)
library(dplyr)
library(ggnewscale)
library(ggplot2)
library(gridExtra)
library(patchwork)
library(pals)
library(RColorBrewer)
library(svglite)
library(readxl)
library(reshape)
library(tidyr)
library(tidyverse)
library(viridis)
library(viridisLite)
library(rvest)
library(rmarkdown)
library(flexdashboard)
library(haven)
library(magrittr)
library(reshape2)
library(stargazer)
library(labelled)
library(Hmisc)
library(stargazer)
library(sandwich)
library(lmtest)
library(lubridate)
theme_set(theme_bw())
theme_update(text = element_text(size=12.5))
# reading in file ####
funding_and_gdp <- read.csv("E:\\School - work\\RA\\~ Germany_housing_and_place_based_policy_funding\\.r file\\outputs\\data\\ERDF_data\\funding_year_region_18_20_GDP.csv")
# regressions
GDP2020_on_funding <- lm(GDPpercap_2020 ~ 0 + years_2018_19 + years_2016_17 + years_2014_15, data = funding_and_gdp)
GDP2018_on_funding <- lm(GDPpercap_2018 ~ 0 + years_2016_17 + years_2014_15, data = funding_and_gdp)
stargazer::stargazer(GDP2020_on_funding, header = FALSE, type = 'latex', model.names = FALSE, model.numbers = FALSE, single.row = TRUE, font.size = "small")
stargazer::stargazer(GDP2018_on_funding, header = FALSE, type = 'latex', model.names = FALSE, model.numbers = FALSE, single.row = TRUE, font.size = "small")
encoding <- read.csv("E:\\School - work\\RA\\~ Germany_housing_and_place_based_policy_funding\\.r file\\outputs\\data\\NUTS_names\\NUTS1_names.csv")
funding_and_gdp <- funding_and_gdp %>%
mutate(NUTS1_states = substr(NUTS3, 1, 3))
View(encoding)
funding_and_gdp$State <- encoding$State[match(funding_and_gdp$NUTS1_states, encoding$NUTS1)]
